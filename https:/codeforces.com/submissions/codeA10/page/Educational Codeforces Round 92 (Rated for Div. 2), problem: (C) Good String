#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
using namespace __gnu_pbds; 
using namespace std;
using ll=long long;
const int mod=1e9+7;
const int N = 1e5+5;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> orderset; 



void solve(){
  string s;
  cin>>s;
  int n=s.length();
  vector<int>freq(10,0);
  for (int i = 0; i < n; i++) {
      freq[s[i]-'0']++;
  }
  int cnt=*max_element(freq.begin(),freq.end());
  for (int i = 0; i < 10; i++) {
      for (int j = 0; j < 10; j++) {
          if(i==j) continue;
          int bit=0,ans=0;
          for(char& it:s){
              if(!bit){
                  if(i==it-'0'){
                      ans++;
                      bit^=1;
                  }
              }
              else if(bit){
                  if(j==it-'0'){
                      ans++;
                      bit^=1;
                  }
              }
          }
          if(ans&1) ans--;
          cnt=max(cnt,ans);
      }
  }

  cout<<n-cnt<<"\n";
    
}

int main(){
    /*#ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout); 
    #endif*/
        ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
        int T=1;
        cin>>T;
        while(T--){
          solve();
        }
        return 0;
        
}
